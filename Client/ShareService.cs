//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IShareService")]
public interface IShareService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/Login", ReplyAction="http://tempuri.org/IShareService/LoginResponse")]
    ShareLibrary.User Login(string ip, string username, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/Login", ReplyAction="http://tempuri.org/IShareService/LoginResponse")]
    System.Threading.Tasks.Task<ShareLibrary.User> LoginAsync(string ip, string username, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/Register", ReplyAction="http://tempuri.org/IShareService/RegisterResponse")]
    ShareLibrary.User Register(string ip, string fName, string lName, string Username, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/Register", ReplyAction="http://tempuri.org/IShareService/RegisterResponse")]
    System.Threading.Tasks.Task<ShareLibrary.User> RegisterAsync(string ip, string fName, string lName, string Username, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/UploadFile", ReplyAction="http://tempuri.org/IShareService/UploadFileResponse")]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ShareLibrary.User))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(byte[][]))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
    void UploadFile(ShareLibrary.ShareFile file, ShareLibrary.User user, string ip);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/UploadFile", ReplyAction="http://tempuri.org/IShareService/UploadFileResponse")]
    System.Threading.Tasks.Task UploadFileAsync(ShareLibrary.ShareFile file, ShareLibrary.User user, string ip);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/DownloadFile", ReplyAction="http://tempuri.org/IShareService/DownloadFileResponse")]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ShareLibrary.User))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(byte[][]))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
    ShareLibrary.ShareFile DownloadFile(ShareLibrary.User user, int fileID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/DownloadFile", ReplyAction="http://tempuri.org/IShareService/DownloadFileResponse")]
    System.Threading.Tasks.Task<ShareLibrary.ShareFile> DownloadFileAsync(ShareLibrary.User user, int fileID);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IShareServiceChannel : IShareService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ShareServiceClient : System.ServiceModel.ClientBase<IShareService>, IShareService
{
    
    public ShareServiceClient()
    {
    }
    
    public ShareServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ShareServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ShareServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ShareServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public ShareLibrary.User Login(string ip, string username, string password)
    {
        return base.Channel.Login(ip, username, password);
    }
    
    public System.Threading.Tasks.Task<ShareLibrary.User> LoginAsync(string ip, string username, string password)
    {
        return base.Channel.LoginAsync(ip, username, password);
    }
    
    public ShareLibrary.User Register(string ip, string fName, string lName, string Username, string password)
    {
        return base.Channel.Register(ip, fName, lName, Username, password);
    }
    
    public System.Threading.Tasks.Task<ShareLibrary.User> RegisterAsync(string ip, string fName, string lName, string Username, string password)
    {
        return base.Channel.RegisterAsync(ip, fName, lName, Username, password);
    }
    
    public void UploadFile(ShareLibrary.ShareFile file, ShareLibrary.User user, string ip)
    {
        base.Channel.UploadFile(file, user, ip);
    }
    
    public System.Threading.Tasks.Task UploadFileAsync(ShareLibrary.ShareFile file, ShareLibrary.User user, string ip)
    {
        return base.Channel.UploadFileAsync(file, user, ip);
    }
    
    public ShareLibrary.ShareFile DownloadFile(ShareLibrary.User user, int fileID)
    {
        return base.Channel.DownloadFile(user, fileID);
    }
    
    public System.Threading.Tasks.Task<ShareLibrary.ShareFile> DownloadFileAsync(ShareLibrary.User user, int fileID)
    {
        return base.Channel.DownloadFileAsync(user, fileID);
    }
}
